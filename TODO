TODO List - worlds simplest bugtracking system 

--Packaging--

--Main app--
	Fix Needs testing:
	To Implement:
		== Next version ==
		* Billboard text

		== Eventually == 
		* Binomial?
		* Optimised normal computation for raw triangles -> isosurface 
		* Overlay device handling -- drag and drop overlay entities
		* Polynomial error estimator in graph
		* Text data load functions
		* Shear-warp volume render mode for voxels
		* Ion exchange filter
		* Front-to back alpha blending ordering support for
		 scene drawing of non-pointcloud objects
		* DTD (Document type descriptor) for state files, to
		  specify a consisted statefile structure
			- How to ensure version compatibility in future
			state files?
		* VTK/xyzm output
		* BB cache for ion data?
		* Option to warn on file overwrite with save after merge (default off)
		* Unit testing system
		* Language Translation support
		* Theora video
		* Improved resolution dialog

	Outstanding bugs:
		== Next release==
		* Loading a full pos file directly onto the video card cannot be aborted.
		* Colour bar drawing broken when tiling an output image
		* Spatial analysis filter does not update its output graph strings.
		* Data files when failed to load, do remove, but are put back at next program load	
		* Voxels will attempt to construct isosurface even with 1 cell across any dimension

		== Eventually==	
		* Error bar masking for graph (mathgl draws error bars outside plot boundary)
		* Windows appears to have weird front-back drawing behaviour for point clouds.
		* Pos load add could always add to bottom of filter list,
		 rather than default value
		* Grid copy/ctrl-c doesn't seem to work under GTK. The data gets
		  passed to the clipboard, but then wx doesn't appear to
		  do anything with it...
			- Could be constrained to wxGTK2.8 or less (
			 wxWidgets Bug Ticket #11811 ??? )


		== Needs reproducing ==
		* Invalid range file being opened cause Package export to crash
		* was abe to get assertion (excomponents.cpp:399) when selecting orthogonal camera.
	Auditing:
		== Next release ==
		* Check each filter is actually reporting the required cache memory

	Performance:
		* Scene is being continuosly refreshed during post effects, causing CPU usage
		  to max out.
		* Clipping sphere/cylinder does BB test? (only useful if we have bb cache)
		* Pos limit loader could alter its behaviour when
		 sampling rates some percentage to be determined (load
		 file, skip buffer).
	
	Misc:


-- Refactor/cleanup --
	* Interaction code needs to be cleaned up. Currently it is a substatiative hack.
		- Viscontrol should store a copy of the original tree,
		  then periodicially compare it to the current tree. if it
		  is different, then it should invalidate the caches for
		  the different bits, and then force a refresh. This would allow for removal 
		  of the callback mechanism that is currently in use
	* work out which inline FIXMEs and TODOs are still valid, and need attention
	* Re-arrange source to reduce compile-time interdependence (bad .h file arrangement?)
		- Move filter base class to own source file, as program should be minimally aware of
		  actual filters
	* I have multiple colour classes floating about. might be an idea to unify them.
	* K3DTree currently requires public access to members of boundcube
